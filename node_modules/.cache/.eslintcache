[{"/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/index.js":"1","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/App.js":"2","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/context/postsContext.js":"3","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/context/authContext.js":"4","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/Layout.js":"5","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/routers/AppRouter.js":"6","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/blogs/ListOfBlogs.js":"7","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/context/postsReducer.js":"8","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/NavBarAuth.js":"9","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/context/AuthReducer.js":"10","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/context/types.js":"11","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/NavBar.js":"12","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/Auth.js":"13","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/Login.js":"14","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/routers/DashBoardPublicRoutes.js":"15","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/routers/PrivateRoutes.js":"16","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/routers/DashBoardRoutes.js":"17","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/routers/PublicRoutes.js":"18","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/blogs/PostDetail.js":"19","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/helpers/postsApi.js":"20","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/blogs/NewPost.js":"21","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/blogs/Post.js":"22","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/comments/NewComment.js":"23","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/comments/CommentDetail.js":"24","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/helpers/customHook.js":"25","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/comments/Comment.js":"26","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/comments/EditingComment.js":"27"},{"size":303,"mtime":1649201519314,"results":"28","hashOfConfig":"29"},{"size":456,"mtime":1649201519312,"results":"30","hashOfConfig":"29"},{"size":1642,"mtime":1649201519313,"results":"31","hashOfConfig":"29"},{"size":1016,"mtime":1649201519313,"results":"32","hashOfConfig":"29"},{"size":442,"mtime":1649201519312,"results":"33","hashOfConfig":"29"},{"size":1651,"mtime":1649201519314,"results":"34","hashOfConfig":"29"},{"size":1344,"mtime":1649201519312,"results":"35","hashOfConfig":"29"},{"size":415,"mtime":1649201519314,"results":"36","hashOfConfig":"29"},{"size":858,"mtime":1649201519312,"results":"37","hashOfConfig":"29"},{"size":342,"mtime":1649201519313,"results":"38","hashOfConfig":"29"},{"size":214,"mtime":1649201519314,"results":"39","hashOfConfig":"29"},{"size":600,"mtime":1649201519312,"results":"40","hashOfConfig":"29"},{"size":1176,"mtime":1649201519312,"results":"41","hashOfConfig":"29"},{"size":1538,"mtime":1649201519312,"results":"42","hashOfConfig":"29"},{"size":541,"mtime":1649201519314,"results":"43","hashOfConfig":"29"},{"size":429,"mtime":1649201519315,"results":"44","hashOfConfig":"29"},{"size":338,"mtime":1649201519315,"results":"45","hashOfConfig":"29"},{"size":302,"mtime":1649201519315,"results":"46","hashOfConfig":"29"},{"size":1785,"mtime":1649201519313,"results":"47","hashOfConfig":"29"},{"size":128,"mtime":1649201519314,"results":"48","hashOfConfig":"29"},{"size":1771,"mtime":1649201519312,"results":"49","hashOfConfig":"29"},{"size":997,"mtime":1649201519312,"results":"50","hashOfConfig":"29"},{"size":2160,"mtime":1649201519313,"results":"51","hashOfConfig":"29"},{"size":3771,"mtime":1649201519313,"results":"52","hashOfConfig":"29"},{"size":390,"mtime":1649201519314,"results":"53","hashOfConfig":"29"},{"size":590,"mtime":1649201519313,"results":"54","hashOfConfig":"29"},{"size":2124,"mtime":1649201519313,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kwpd9x",{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","suppressedMessages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},"/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/index.js",[],[],"/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/App.js",["152","153"],[],"import { ListOfPost } from \"./components/blogs/ListOfBlogs\";\nimport { Layout } from \"./components/Layout\";\nimport { ContextProvider } from \"./context/postsContext\";\nimport { ContextAuthProvider } from \"./context/authContext\";\nimport { AppRouter } from \"./routers/AppRouter\";\n\nfunction App() {\n  return (\n    <ContextAuthProvider>\n      <ContextProvider>\n        <AppRouter />\n      </ContextProvider>\n    </ContextAuthProvider>\n  );\n}\n\nexport default App;\n","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/context/postsContext.js",["154","155","156"],[],"import { createContext, useReducer, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport postsApi from \"../helpers/postsApi\";\nimport postsReducer from \"./postsReducer\";\nimport types from \"./types\";\n\nexport const PostsContext = createContext({});\n\nexport const ContextProvider = ({ children }) => {\n  const [reload, setReload] = useState(true);\n  const navigate = useNavigate();\n\n  const initialState = {\n    posts: [],\n  };\n\n  // const init = () => {\n  //   return JSON.parse(localStorage.getItem(\"todos\")) || [];\n  // };\n\n  const [state, dispatch] = useReducer(postsReducer, initialState);\n\n  const getPostDetail = async (id) => {\n    console.log(\"el id\", id);\n    const { data } = await postsApi.get(`posts/${id}`);\n    const posts = data.posts;\n    return posts;\n    // localStorage.setItem(\"posts\", JSON.stringify(posts));\n    // dispatch({ type: types.refreshData, payload: posts });\n  };\n\n  // useEffect(() => {\n  //   if (reload) {\n  //     refreshPosts();\n  //     navigate(\"/\");\n  //     setReload(false);\n  //   }\n  // }, [reload]);\n\n  const deletePost = async (id, token) => {\n    try {\n      let config = {\n        headers: {\n          authorization: \"Bearer \" + token,\n        },\n      };\n      const resp = await postsApi.delete(`posts/${id}`, config);\n      setReload(true);\n      dispatch({ type: types.deleteData, payload: id });\n    } catch (error) {\n      alert(`${error.response.data.msg}!!`);\n    }\n  };\n\n  return (\n    <PostsContext.Provider\n      value={{ getPostDetail, deletePost, setReload, reload, dispatch, state }}\n    >\n      {children}\n    </PostsContext.Provider>\n  );\n};\n","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/context/authContext.js",["157"],[],"import { createContext, useEffect, useReducer } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport AuthReducer from \"./AuthReducer\";\nimport types from \"./types\";\n\nexport const AuthContext = createContext({});\n\nexport const ContextAuthProvider = ({ children }) => {\n  const navigate = useNavigate();\n  const init = () => {\n    const user = JSON.parse(localStorage.getItem(\"user\")) || {};\n    return { user };\n  };\n\n  // const initialState ={\n  //   user:null\n  // }\n\n  const [userState, dispatch] = useReducer(AuthReducer, {}, init);\n\n  const authUser = (user) => {\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    dispatch({ type: types.auth, payload: user });\n    navigate(\"/\");\n  };\n  const logoutUser = () => {\n    const user = {};\n    localStorage.setItem(\"user\", JSON.stringify(user));\n    dispatch({ type: types.auth });\n    navigate(\"/\");\n  };\n\n  return (\n    <AuthContext.Provider value={{ userState, authUser, logoutUser }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/Layout.js",["158"],[],"import { useState, useContext } from \"react\";\nimport { NavBar } from \"./NavBar\";\nimport { NavBarAuth } from \"./NavBarAuth\";\nimport { AuthContext } from \"../context/authContext\";\n\nexport const Layout = ({ children }) => {\n  const { userState } = useContext(AuthContext);\n\n  return (\n    <>\n      {userState.user?.token ? <NavBarAuth /> : <NavBar />}\n      <div className=\"container\">\n        <div>{children}</div>\n      </div>\n    </>\n  );\n};\n","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/routers/AppRouter.js",["159","160","161","162","163"],[],"import { Routes, Route } from \"react-router-dom\";\nimport { Auth } from \"../components/Auth\";\nimport { ListOfPost } from \"../components/blogs/ListOfBlogs\";\nimport { PostDetail } from \"../components/blogs/PostDetail\";\nimport { CommentDetail } from \"../components/comments/CommentDetail\";\nimport { NewComment } from \"../components/comments/NewComment\";\nimport { Layout } from \"../components/Layout\";\nimport { Login } from \"../components/Login\";\nimport { NavBar } from \"../components/NavBar\";\nimport { DashBoardPublicRoutes } from \"./DashBoardPublicRoutes\";\nimport { DashBoardRoutes } from \"./DashBoardRoutes\";\nimport { PrivateRoutes } from \"./PrivateRoutes\";\nimport { PublicRoutes } from \"./PublicRoutes\";\n\nexport const AppRouter = () => {\n  return (\n    <Layout>\n      <Routes>\n        {/* <Route\n          path=\"/*\"\n          element={\n            <PublicRoutes>\n              <DashBoardPublicRoutes />\n            </PublicRoutes>\n          }\n        />\n        <Route path=\"/\" element={<ListOfPost />}>\n          {\" \"}\n        </Route>\n        <Route\n          path=\"/priv\"\n          element={\n            <PrivateRoutes>\n              <DashBoardRoutes />\n            </PrivateRoutes>\n          }\n        /> */}\n        <Route path=\"/\" element={<ListOfPost />} />\n        <Route path=\"login\" element={<Login />} />\n        <Route path=\"auth\" element={<Auth />} />\n        <Route path=\"post/:id\" element={<PostDetail />} />\n        <Route path=\"post/:id/create-comment\" element={<NewComment />} />\n        <Route\n          path=\"post/:id/comment-detail/:idcomment\"\n          element={<CommentDetail />}\n        />\n      </Routes>\n    </Layout>\n  );\n};\n","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/blogs/ListOfBlogs.js",["164","165","166"],[],"import { useState, useContext, useEffect } from \"react\";\nimport { PostsContext } from \"../../context/postsContext\";\nimport postsApi from \"../../helpers/postsApi\";\nimport { NewPost } from \"./NewPost\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { Post } from \"./Post\";\nimport types from \"../../context/types\";\n\nexport const ListOfPost = () => {\n  const navigate = useNavigate();\n  const { reload, setReload, state, dispatch } = useContext(PostsContext);\n  const { posts } = state;\n  const [newPost, setNewPost] = useState(false);\n  const [postState, setPostState] = useState([]);\n\n  const refreshPosts = async () => {\n    const { data } = await postsApi.get(\"posts\");\n    const posts = data.posts;\n    dispatch({ type: types.refreshData, payload: posts });\n  };\n\n  useEffect(() => {\n    if (reload) {\n      refreshPosts();\n      navigate(\"/\");\n      setReload(false);\n    }\n  }, [reload]);\n  return (\n    <>\n      <div className=\"mt-3 mb-1\">\n        <div className=\"d-flex align-items-center  justify-content-center\">\n          <button className=\"my-btn\" onClick={() => setNewPost(true)}>\n            CREATE POST\n          </button>\n        </div>\n      </div>\n      {newPost ? (\n        <NewPost setNewPost={() => setNewPost(false)} />\n      ) : (\n        posts.map((x) => <Post key={x._d} somePost={x} />)\n      )}\n    </>\n  );\n};\n","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/context/postsReducer.js",[],[],"/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/NavBarAuth.js",[],[],"/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/context/AuthReducer.js",[],[],"/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/context/types.js",[],[],"/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/NavBar.js",[],[],"/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/Auth.js",["167","168","169","170","171"],[],"import { useState, useContext } from \"react\";\nimport { HandleForm } from \"../helpers/customHook\";\nimport { Layout } from \"./Layout\";\nimport postsApi from \"../helpers/postsApi\";\nimport { AuthContext } from \"../context/authContext\";\n\nexport const Auth = () => {\n  const { userState, authUser, logoutUser } = useContext(AuthContext);\n\n  const initialValue = {\n    password: \"\",\n    email: \"\",\n  };\n  const [formValue, onInputChange, resetForm] = HandleForm(initialValue);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const res = await postsApi.post(\"users/auth\", formValue);\n    const { fullName } = res.data.user;\n    const token = res.data.token;\n    authUser({ token, fullName });\n  };\n\n  return (\n    <div className=\"form-container\">\n      <form onSubmit={handleSubmit} className=\"login-form\">\n        <input\n          type=\"text\"\n          placeholder=\"password\"\n          name=\"password\"\n          onChange={onInputChange}\n        />\n        <input\n          type=\"email\"\n          placeholder=\"email\"\n          name=\"email\"\n          onChange={onInputChange}\n        />\n        <button type=\"submit\">sing in</button>\n      </form>\n    </div>\n  );\n};\n","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/Login.js",["172","173","174","175"],[],"import { useState } from \"react\";\nimport { HandleForm } from \"../helpers/customHook\";\nimport { Layout } from \"./Layout\";\nimport postsApi from \"../helpers/postsApi\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nexport const Login = () => {\n  const navigate = useNavigate();\n  const initialValue = {\n    firstName: \"\",\n    lastName: \"\",\n    password: \"\",\n    email: \"\",\n  };\n  const [formValue, onInputChange, resetForm] = HandleForm(initialValue);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    console.log(formValue);\n    try {\n      const res = await postsApi.post(\"users\", formValue);\n      // navigate(`/auth`);\n      console.log(res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"form-container\">\n      <form onSubmit={handleSubmit} className=\"login-form\">\n        <input\n          type=\"text\"\n          placeholder=\"first name\"\n          name=\"firstName\"\n          onChange={onInputChange}\n        />\n        <input\n          type=\"text\"\n          name=\"lastName\"\n          placeholder=\"last name\"\n          onChange={onInputChange}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"password\"\n          name=\"password\"\n          onChange={onInputChange}\n        />\n        <input\n          type=\"email\"\n          placeholder=\"email\"\n          name=\"email\"\n          onChange={onInputChange}\n        />\n        <button type=\"submit\">login</button>\n        <Link to=\"/auth\">sing in with my account</Link>\n      </form>\n    </div>\n  );\n};\n","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/routers/DashBoardPublicRoutes.js",["176"],[],"import React from \"react\";\nimport { Route, Routes } from \"react-router-dom\";\nimport { Auth } from \"../components/Auth\";\nimport { Login } from \"../components/Login\";\nimport { ListOfPost } from \"../components/blogs/ListOfBlogs\";\n\nexport const DashBoardPublicRoutes = () => {\n  return (\n    <>\n      <div>\n        <Routes>\n          <Route path=\"login\" element={<Login />}>\n            {\" \"}\n          </Route>\n          <Route path=\"auth\" element={<Auth />}>\n            {\" \"}\n          </Route>\n        </Routes>\n      </div>\n    </>\n  );\n};\n","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/routers/PrivateRoutes.js",["177"],[],"import { useContext } from \"react\";\nimport { AuthContext } from \"../context/authContext\";\nimport { Navigate, useLocation } from \"react-router-dom\";\n\nexport const PrivateRoutes = ({ children }) => {\n  const { userState } = useContext(AuthContext);\n  // const { pathname, search } = useLocation();\n\n  // localStorage.setItem(\"lastPath\", pathname + search);\n\n  return userState.user?.token ? children : <Navigate to=\"/login\" />;\n};\n","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/routers/DashBoardRoutes.js",[],[],"/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/routers/PublicRoutes.js",[],[],"/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/blogs/PostDetail.js",["178"],[],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { PostsContext } from \"../../context/postsContext\";\nimport { Comment } from \"../comments/Comment\";\n\nexport const PostDetail = () => {\n  const params = useParams();\n  const id = params.id;\n  const { deletePost, getPostDetail } = useContext(PostsContext);\n  const { userState } = useContext(AuthContext);\n  const [post, setPost] = useState({});\n  const [loading, setLoading] = useState(true);\n\n  const fetchPost = async () => {\n    try {\n      const postsFetched = await getPostDetail(id);\n      setPost(postsFetched);\n      setLoading(false);\n    } catch (error) {\n      console.log(error);\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchPost();\n  }, []);\n\n  return (\n    <div>\n      {loading ? (\n        <div>cargando...</div>\n      ) : (\n        <>\n          <h2\n            style={{ color: \"#595959\" }}\n            className=\"text-center my-4\"\n          >{` ${post?.title}`}</h2>\n          <p className=\"mb-4\">{post?.postBody}</p>\n          <button\n            className=\"my-btn\"\n            onClick={() => deletePost(id, userState.user.token)}\n          >\n            delete post\n          </button>\n          {/* <h4>comments:</h4> */}\n          <div className=\"d-flex  justify-content-end\">\n            <Link className=\"my-link h5\" to={\"create-comment\"}>\n              {\" \"}\n              <p>\n                {\" \"}\n                <i class=\"bi bi-file-plus\"></i>create new comment\n              </p>{\" \"}\n            </Link>\n          </div>\n          {post.comments.map((x) => (\n            <Comment key={x._id} comment={x} />\n          ))}\n        </>\n      )}\n    </div>\n  );\n};\n","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/helpers/postsApi.js",[],[],"/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/blogs/NewPost.js",["179"],[],"import { useContext, useState } from \"react\";\nimport { AuthContext } from \"../../context/authContext\";\nimport postsApi from \"../../helpers/postsApi\";\nimport jwtDecode from \"jwt-decode\";\nimport { PostsContext } from \"../../context/postsContext\";\n\nexport const NewPost = ({ setNewPost }) => {\n  const { userState } = useContext(AuthContext);\n  const { setReload } = useContext(PostsContext);\n  const { _id } = jwtDecode(userState.user?.token);\n\n  const initialValue = {\n    title: \"\",\n    postBody: \"\",\n    author: _id,\n  };\n  const [formValue, setFormValue] = useState(initialValue);\n\n  const onInputChange = ({ target }) => {\n    const { value, name } = target;\n    setFormValue({\n      ...formValue,\n      [name]: value,\n    });\n  };\n\n  const onHandleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      let config = {\n        headers: {\n          authorization: \"Bearer \" + userState.user.token,\n        },\n      };\n      const res = await postsApi.post(\"posts\", formValue, config);\n      setFormValue(initialValue);\n      setReload(true);\n      setNewPost();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={onHandleSubmit}>\n        <label>title</label>\n        <input\n          className=\"form-control\"\n          name=\"title\"\n          onChange={onInputChange}\n          value={formValue.title}\n        />\n        <div class=\"form-text\">Write a title</div>\n        <textarea\n          name=\"postBody\"\n          onChange={onInputChange}\n          className=\"form-control\"\n          value={formValue.postBody}\n        />\n        <div class=\"form-text\">Write a post</div>\n        <button onClick={setNewPost}> cancel</button>\n        <button type=\"submit\"> send </button>\n      </form>\n    </div>\n  );\n};\n","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/blogs/Post.js",["180","181","182"],[],"import React, { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { PostsContext } from \"../../context/postsContext\";\n\nexport const Post = ({ somePost }) => {\n  const { _id, title, postBody, author, images } = somePost;\n\n  const shorted = postBody.substring(0, 1000);\n\n  const imgUrl = `http://localhost:8000/${images}`;\n\n  return (\n    <div className=\"post-container container px-5 py-5\">\n      <div className=\"row\">\n        <div className=\"col-sm-12 sm-6 col-md-4 d-flex align-center\">\n          <img className=\"img-fluid\" src={imgUrl} alt=\"\" />\n        </div>\n        <div className=\"col-sm-12 sm-6 col-md-8 px-4\">\n          <h4 className=\"text-center mt-2 mb-3\">{title}</h4>\n          <p>{`${shorted}...`}</p>\n          <Link className=\"text-center my-link\" to={`post/${_id}`}>\n            <p className=\"\" class=\"h5\">\n              <i class=\"bi bi-plus\"></i>\n              Read more...\n            </p>\n          </Link>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/comments/NewComment.js",[],[],"/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/comments/CommentDetail.js",["183","184","185"],[],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/authContext\";\nimport postsApi from \"../../helpers/postsApi\";\nimport { EditingComment } from \"./EditingComment\";\n\nexport const CommentDetail = () => {\n  const params = useParams();\n  const { id, idcomment } = params;\n\n  const { userState } = useContext(AuthContext);\n  const [commentState, setCommentState] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [editing, setEditing] = useState(false);\n  const [reload, setReload] = useState(true);\n  const navigate = useNavigate();\n\n  const fetchPost = async () => {\n    try {\n      const { data } = await postsApi.get(`posts/${id}/comments/${idcomment}`);\n      setCommentState(data.comment);\n      setLoading(false);\n    } catch (error) {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    if (reload) {\n      fetchPost();\n      setReload(false);\n    }\n  }, [reload]);\n\n  const deletePost = async () => {\n    try {\n      let config = {\n        headers: {\n          authorization: \"Bearer \" + userState.user.token,\n        },\n      };\n      const res = await postsApi.delete(\n        `posts/${id}/comments/${idcomment}`,\n        config\n      );\n      navigate(`/post/${id}`);\n    } catch (error) {\n      alert(error.response?.data?.msg);\n    }\n  };\n  return (\n    <>\n      {\" \"}\n      <>\n        {loading ? (\n          <div>cargando...</div>\n        ) : (\n          <>\n            {editing ? (\n              <EditingComment\n                commentToUpdate={commentState}\n                setEditing={setEditing}\n                setReload={setReload}\n              />\n            ) : (\n              <>\n                <div className=\" container px-5 py-5\">\n                  <div className=\"row\">\n                    <div className=\"col-sm-12 sm-6 col-md-9 d-flex align-items-center\">\n                      <p>{commentState.comment && commentState.comment}</p>\n                    </div>\n                    <div className=\"col-sm-12 sm-6 col-md-3 d-flex flex-column \">\n                      <img\n                        src={`http://localhost:8000/${commentState.image}`}\n                        alt=\"\"\n                        className=\"img-fluid pt-2 mb-4\"\n                      />\n                      <p className=\"text-center\">\n                        <span className=\"my-span\">Author:</span>{\" \"}\n                        {` ${commentState?.author?.fullName}`}\n                      </p>\n                      <p className=\"text-center\">\n                        <span className=\"my-span\">Email:</span>\n                        {`  ${commentState?.author?.email}`}\n                      </p>\n                      <div className=\"d-flex justify-content-between m-0\">\n                        <button\n                          className=\"my-btn-danger  m-2\"\n                          onClick={deletePost}\n                        >\n                          delete\n                        </button>\n                        <button\n                          className=\"my-btn m-2\"\n                          onClick={() => setEditing(true)}\n                          style={{ display: \"block\" }}\n                        >\n                          update\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <button\n                  className=\"back\"\n                  onClick={() => navigate(`/post/${id}`)}\n                >\n                  {\" \"}\n                  <i class=\"bi bi-backspace\"></i> back{\" \"}\n                </button>\n              </>\n            )}\n          </>\n        )}\n      </>\n    </>\n  );\n};\n","/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/helpers/customHook.js",[],[],"/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/comments/Comment.js",[],[],"/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/comments/EditingComment.js",["186","187"],[],"import React, { useContext, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { AuthContext } from \"../../context/authContext\";\nimport postsApi from \"../../helpers/postsApi\";\n\nexport const EditingComment = ({ commentToUpdate, setEditing, setReload }) => {\n  const [comment, setComment] = useState(commentToUpdate.comment);\n  const [archivo, guardarArchivo] = useState(\"\");\n  const params = useParams();\n  const { id, idcomment } = params;\n  const navigate = useNavigate();\n\n  const leerArchivo = (e) => {\n    guardarArchivo(e.target.files[0]);\n  };\n\n  const { userState } = useContext(AuthContext);\n\n  const handleChange = ({ target }) => {\n    setComment(target.value);\n  };\n\n  const handleClick = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"comment\", comment);\n    formData.append(\"image\", archivo);\n\n    let config = {\n      headers: {\n        authorization: \"Bearer \" + userState.user.token,\n        \"Content-Type\": \"multipart/form-data\",\n      },\n    };\n    try {\n      const res = await postsApi.put(\n        `posts/${id}/comments/${idcomment}`,\n        formData,\n        config\n      );\n      setEditing(false);\n      setReload(true);\n    } catch (error) {\n      alert(error.response?.data?.msg);\n    }\n  };\n  return (\n    <div class=\"m-5\">\n      <form class=\"m-5\">\n        <div class=\"m-5\">\n          <textarea\n            class=\"form-control\"\n            onChange={handleChange}\n            type=\"text\"\n            value={comment}\n          />\n          <div class=\"form-text\">Update the comment</div>\n          <input\n            class=\"form-control mt-3 mb-4\"\n            type=\"file\"\n            name=\"imagen\"\n            onChange={leerArchivo}\n          />\n          <div class=\"form-text mb-3\">Upload an image</div>\n          <button className=\"my-btn\" onClick={handleClick}>\n            submit\n          </button>\n        </div>\n        <button className=\"back\" onClick={() => setEditing(false)}>\n          {\" \"}\n          <i class=\"bi bi-backspace\"></i> back{\" \"}\n        </button>\n      </form>\n    </div>\n  );\n};\n",{"ruleId":"188","severity":1,"message":"189","line":1,"column":10,"nodeType":"190","messageId":"191","endLine":1,"endColumn":20},{"ruleId":"188","severity":1,"message":"192","line":2,"column":10,"nodeType":"190","messageId":"191","endLine":2,"endColumn":16},{"ruleId":"188","severity":1,"message":"193","line":1,"column":37,"nodeType":"190","messageId":"191","endLine":1,"endColumn":46},{"ruleId":"188","severity":1,"message":"194","line":11,"column":9,"nodeType":"190","messageId":"191","endLine":11,"endColumn":17},{"ruleId":"188","severity":1,"message":"195","line":47,"column":13,"nodeType":"190","messageId":"191","endLine":47,"endColumn":17},{"ruleId":"188","severity":1,"message":"193","line":1,"column":25,"nodeType":"190","messageId":"191","endLine":1,"endColumn":34},{"ruleId":"188","severity":1,"message":"196","line":1,"column":10,"nodeType":"190","messageId":"191","endLine":1,"endColumn":18},{"ruleId":"188","severity":1,"message":"197","line":9,"column":10,"nodeType":"190","messageId":"191","endLine":9,"endColumn":16},{"ruleId":"188","severity":1,"message":"198","line":10,"column":10,"nodeType":"190","messageId":"191","endLine":10,"endColumn":31},{"ruleId":"188","severity":1,"message":"199","line":11,"column":10,"nodeType":"190","messageId":"191","endLine":11,"endColumn":25},{"ruleId":"188","severity":1,"message":"200","line":12,"column":10,"nodeType":"190","messageId":"191","endLine":12,"endColumn":23},{"ruleId":"188","severity":1,"message":"201","line":13,"column":10,"nodeType":"190","messageId":"191","endLine":13,"endColumn":22},{"ruleId":"188","severity":1,"message":"202","line":15,"column":10,"nodeType":"190","messageId":"191","endLine":15,"endColumn":19},{"ruleId":"188","severity":1,"message":"203","line":15,"column":21,"nodeType":"190","messageId":"191","endLine":15,"endColumn":33},{"ruleId":"204","severity":1,"message":"205","line":29,"column":6,"nodeType":"206","endLine":29,"endColumn":14,"suggestions":"207"},{"ruleId":"188","severity":1,"message":"196","line":1,"column":10,"nodeType":"190","messageId":"191","endLine":1,"endColumn":18},{"ruleId":"188","severity":1,"message":"192","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":16},{"ruleId":"188","severity":1,"message":"208","line":8,"column":11,"nodeType":"190","messageId":"191","endLine":8,"endColumn":20},{"ruleId":"188","severity":1,"message":"209","line":8,"column":32,"nodeType":"190","messageId":"191","endLine":8,"endColumn":42},{"ruleId":"188","severity":1,"message":"210","line":14,"column":36,"nodeType":"190","messageId":"191","endLine":14,"endColumn":45},{"ruleId":"188","severity":1,"message":"196","line":1,"column":10,"nodeType":"190","messageId":"191","endLine":1,"endColumn":18},{"ruleId":"188","severity":1,"message":"192","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":16},{"ruleId":"188","severity":1,"message":"194","line":8,"column":9,"nodeType":"190","messageId":"191","endLine":8,"endColumn":17},{"ruleId":"188","severity":1,"message":"210","line":15,"column":36,"nodeType":"190","messageId":"191","endLine":15,"endColumn":45},{"ruleId":"188","severity":1,"message":"189","line":5,"column":10,"nodeType":"190","messageId":"191","endLine":5,"endColumn":20},{"ruleId":"188","severity":1,"message":"211","line":3,"column":20,"nodeType":"190","messageId":"191","endLine":3,"endColumn":31},{"ruleId":"204","severity":1,"message":"212","line":27,"column":6,"nodeType":"206","endLine":27,"endColumn":8,"suggestions":"213"},{"ruleId":"188","severity":1,"message":"214","line":35,"column":13,"nodeType":"190","messageId":"191","endLine":35,"endColumn":16},{"ruleId":"188","severity":1,"message":"215","line":1,"column":17,"nodeType":"190","messageId":"191","endLine":1,"endColumn":27},{"ruleId":"188","severity":1,"message":"216","line":3,"column":10,"nodeType":"190","messageId":"191","endLine":3,"endColumn":22},{"ruleId":"188","severity":1,"message":"217","line":6,"column":33,"nodeType":"190","messageId":"191","endLine":6,"endColumn":39},{"ruleId":"188","severity":1,"message":"218","line":2,"column":10,"nodeType":"190","messageId":"191","endLine":2,"endColumn":14},{"ruleId":"204","severity":1,"message":"212","line":32,"column":6,"nodeType":"206","endLine":32,"endColumn":14,"suggestions":"219"},{"ruleId":"188","severity":1,"message":"214","line":41,"column":13,"nodeType":"190","messageId":"191","endLine":41,"endColumn":16},{"ruleId":"188","severity":1,"message":"194","line":11,"column":9,"nodeType":"190","messageId":"191","endLine":11,"endColumn":17},{"ruleId":"188","severity":1,"message":"214","line":36,"column":13,"nodeType":"190","messageId":"191","endLine":36,"endColumn":16},"no-unused-vars","'ListOfPost' is defined but never used.","Identifier","unusedVar","'Layout' is defined but never used.","'useEffect' is defined but never used.","'navigate' is assigned a value but never used.","'resp' is assigned a value but never used.","'useState' is defined but never used.","'NavBar' is defined but never used.","'DashBoardPublicRoutes' is defined but never used.","'DashBoardRoutes' is defined but never used.","'PrivateRoutes' is defined but never used.","'PublicRoutes' is defined but never used.","'postState' is assigned a value but never used.","'setPostState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'navigate', 'refreshPosts', and 'setReload'. Either include them or remove the dependency array.","ArrayExpression",["220"],"'userState' is assigned a value but never used.","'logoutUser' is assigned a value but never used.","'resetForm' is assigned a value but never used.","'useLocation' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchPost'. Either include it or remove the dependency array.",["221"],"'res' is assigned a value but never used.","'useContext' is defined but never used.","'PostsContext' is defined but never used.","'author' is assigned a value but never used.","'Link' is defined but never used.",["222"],{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},"Update the dependencies array to be: [navigate, refreshPosts, reload, setReload]",{"range":"229","text":"230"},"Update the dependencies array to be: [fetchPost]",{"range":"231","text":"232"},"Update the dependencies array to be: [fetchPost, reload]",{"range":"233","text":"234"},[890,898],"[navigate, refreshPosts, reload, setReload]",[848,850],"[fetchPost]",[1008,1016],"[fetchPost, reload]"]