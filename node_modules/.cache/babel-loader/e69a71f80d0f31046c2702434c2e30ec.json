{"ast":null,"code":"var _jsxFileName = \"/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/blogs/NewPost.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport { AuthContext } from \"../../context/authContext\";\nimport postsApi from \"../../helpers/postsApi\";\nimport jwtDecode from \"jwt-decode\";\nimport { PostsContext } from \"../../context/postsContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NewPost = _ref => {\n  _s();\n\n  var _userState$user;\n\n  let {\n    setNewPost\n  } = _ref;\n  const {\n    userState\n  } = useContext(AuthContext);\n  const {\n    setReload\n  } = useContext(PostsContext);\n  const {\n    _id\n  } = jwtDecode((_userState$user = userState.user) === null || _userState$user === void 0 ? void 0 : _userState$user.token);\n  const initialValue = {\n    title: \"\",\n    postBody: \"\",\n    author: _id\n  };\n  const [formValue, setFormValue] = useState(initialValue);\n\n  const onInputChange = _ref2 => {\n    let {\n      target\n    } = _ref2;\n    const {\n      value,\n      name\n    } = target;\n    setFormValue({ ...formValue,\n      [name]: value\n    });\n  };\n\n  const onHandleSubmit = async e => {\n    e.preventDefault();\n\n    try {\n      let config = {\n        headers: {\n          authorization: \"Bearer \" + userState.user.token\n        }\n      };\n      const res = await postsApi.post(\"posts\", formValue, config);\n      setFormValue(initialValue);\n      setReload(true);\n      setNewPost();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onHandleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"form-control\",\n        name: \"title\",\n        onChange: onInputChange,\n        value: formValue.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-text\",\n        children: \"Write a title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"postBody\",\n        onChange: onInputChange,\n        className: \"form-control\",\n        value: formValue.postBody\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-text\",\n        children: \"Write a post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: setNewPost,\n        children: \" cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \" send \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewPost, \"/iI5qif0ImEBABeVU2iw210JJ7Q=\");\n\n_c = NewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"sources":["/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/blogs/NewPost.js"],"names":["useContext","useState","AuthContext","postsApi","jwtDecode","PostsContext","NewPost","setNewPost","userState","setReload","_id","user","token","initialValue","title","postBody","author","formValue","setFormValue","onInputChange","target","value","name","onHandleSubmit","e","preventDefault","config","headers","authorization","res","post","error","console","log"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,QAA6B,4BAA7B;;AAEA,OAAO,MAAMC,OAAO,GAAG,QAAoB;AAAA;;AAAA;;AAAA,MAAnB;AAAEC,IAAAA;AAAF,GAAmB;AACzC,QAAM;AAAEC,IAAAA;AAAF,MAAgBR,UAAU,CAACE,WAAD,CAAhC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAgBT,UAAU,CAACK,YAAD,CAAhC;AACA,QAAM;AAAEK,IAAAA;AAAF,MAAUN,SAAS,oBAACI,SAAS,CAACG,IAAX,oDAAC,gBAAgBC,KAAjB,CAAzB;AAEA,QAAMC,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE,EADY;AAEnBC,IAAAA,QAAQ,EAAE,EAFS;AAGnBC,IAAAA,MAAM,EAAEN;AAHW,GAArB;AAKA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAACY,YAAD,CAA1C;;AAEA,QAAMM,aAAa,GAAG,SAAgB;AAAA,QAAf;AAAEC,MAAAA;AAAF,KAAe;AACpC,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkBF,MAAxB;AACAF,IAAAA,YAAY,CAAC,EACX,GAAGD,SADQ;AAEX,OAACK,IAAD,GAAQD;AAFG,KAAD,CAAZ;AAID,GAND;;AAQA,QAAME,cAAc,GAAG,MAAOC,CAAP,IAAa;AAClCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI;AACF,UAAIC,MAAM,GAAG;AACXC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAE,YAAYpB,SAAS,CAACG,IAAV,CAAeC;AADnC;AADE,OAAb;AAKA,YAAMiB,GAAG,GAAG,MAAM1B,QAAQ,CAAC2B,IAAT,CAAc,OAAd,EAAuBb,SAAvB,EAAkCS,MAAlC,CAAlB;AACAR,MAAAA,YAAY,CAACL,YAAD,CAAZ;AACAJ,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAF,MAAAA,UAAU;AACX,KAVD,CAUE,OAAOwB,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAfD;;AAiBA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAER,cAAhB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,QAAQ,EAAEJ,aAHZ;AAIE,QAAA,KAAK,EAAEF,SAAS,CAACH;AAJnB;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,QAAQ,EAAEK,aAFZ;AAGE,QAAA,SAAS,EAAC,cAHZ;AAIE,QAAA,KAAK,EAAEF,SAAS,CAACF;AAJnB;AAAA;AAAA;AAAA;AAAA,cATF,eAeE;AAAK,QAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eAgBE;AAAQ,QAAA,OAAO,EAAER,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF,eAiBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA5DM;;GAAMD,O;;KAAAA,O","sourcesContent":["import { useContext, useState } from \"react\";\nimport { AuthContext } from \"../../context/authContext\";\nimport postsApi from \"../../helpers/postsApi\";\nimport jwtDecode from \"jwt-decode\";\nimport { PostsContext } from \"../../context/postsContext\";\n\nexport const NewPost = ({ setNewPost }) => {\n  const { userState } = useContext(AuthContext);\n  const { setReload } = useContext(PostsContext);\n  const { _id } = jwtDecode(userState.user?.token);\n\n  const initialValue = {\n    title: \"\",\n    postBody: \"\",\n    author: _id,\n  };\n  const [formValue, setFormValue] = useState(initialValue);\n\n  const onInputChange = ({ target }) => {\n    const { value, name } = target;\n    setFormValue({\n      ...formValue,\n      [name]: value,\n    });\n  };\n\n  const onHandleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      let config = {\n        headers: {\n          authorization: \"Bearer \" + userState.user.token,\n        },\n      };\n      const res = await postsApi.post(\"posts\", formValue, config);\n      setFormValue(initialValue);\n      setReload(true);\n      setNewPost();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={onHandleSubmit}>\n        <label>title</label>\n        <input\n          className=\"form-control\"\n          name=\"title\"\n          onChange={onInputChange}\n          value={formValue.title}\n        />\n        <div class=\"form-text\">Write a title</div>\n        <textarea\n          name=\"postBody\"\n          onChange={onInputChange}\n          className=\"form-control\"\n          value={formValue.postBody}\n        />\n        <div class=\"form-text\">Write a post</div>\n        <button onClick={setNewPost}> cancel</button>\n        <button type=\"submit\"> send </button>\n      </form>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}