{"ast":null,"code":"var _jsxFileName = \"/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/context/postsContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport postsApi from \"../helpers/postsApi\";\nimport postsReducer from \"./postsReducer\";\nimport types from \"./types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostsContext = /*#__PURE__*/createContext({});\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [reload, setReload] = useState(true);\n  const navigate = useNavigate();\n  const initialState = {\n    posts: []\n  }; // const init = () => {\n  //   return JSON.parse(localStorage.getItem(\"todos\")) || [];\n  // };\n\n  const [state, dispatch] = useReducer(postsReducer, initialState);\n\n  const getPostDetail = async id => {\n    console.log(\"el id\", id);\n    const {\n      data\n    } = await postsApi.get(`posts/${id}`);\n    const posts = data.posts;\n    return posts; // localStorage.setItem(\"posts\", JSON.stringify(posts));\n    // dispatch({ type: types.refreshData, payload: posts });\n  }; // useEffect(() => {\n  //   if (reload) {\n  //     refreshPosts();\n  //     navigate(\"/\");\n  //     setReload(false);\n  //   }\n  // }, [reload]);\n\n\n  const deletePost = async (id, token) => {\n    try {\n      let config = {\n        headers: {\n          authorization: \"Bearer \" + token\n        }\n      };\n      const resp = await postsApi.delete(`posts/${id}`, config);\n      setReload(true);\n      dispatch({\n        type: types.deleteData,\n        payload: id\n      });\n    } catch (error) {\n      alert(`${error.response.data.msg}!!`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(PostsContext.Provider, {\n    value: {\n      getPostDetail,\n      deletePost,\n      setReload,\n      reload,\n      dispatch,\n      state\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"4nSmJebl6TqpcHlMpvamdNR/hUU=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/context/postsContext.js"],"names":["createContext","useReducer","useEffect","useState","useNavigate","postsApi","postsReducer","types","PostsContext","ContextProvider","children","reload","setReload","navigate","initialState","posts","state","dispatch","getPostDetail","id","console","log","data","get","deletePost","token","config","headers","authorization","resp","delete","type","deleteData","payload","error","alert","response","msg"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,SAApC,EAA+CC,QAA/C,QAA+D,OAA/D;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,OAAO,MAAMC,YAAY,gBAAGR,aAAa,CAAC,EAAD,CAAlC;AAEP,OAAO,MAAMS,eAAe,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC/C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC;AACA,QAAMU,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAMU,YAAY,GAAG;AACnBC,IAAAA,KAAK,EAAE;AADY,GAArB,CAJ+C,CAQ/C;AACA;AACA;;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,UAAU,CAACK,YAAD,EAAeQ,YAAf,CAApC;;AAEA,QAAMI,aAAa,GAAG,MAAOC,EAAP,IAAc;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,EAArB;AACA,UAAM;AAAEG,MAAAA;AAAF,QAAW,MAAMjB,QAAQ,CAACkB,GAAT,CAAc,SAAQJ,EAAG,EAAzB,CAAvB;AACA,UAAMJ,KAAK,GAAGO,IAAI,CAACP,KAAnB;AACA,WAAOA,KAAP,CAJkC,CAKlC;AACA;AACD,GAPD,CAd+C,CAuB/C;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMS,UAAU,GAAG,OAAOL,EAAP,EAAWM,KAAX,KAAqB;AACtC,QAAI;AACF,UAAIC,MAAM,GAAG;AACXC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAE,YAAYH;AADpB;AADE,OAAb;AAKA,YAAMI,IAAI,GAAG,MAAMxB,QAAQ,CAACyB,MAAT,CAAiB,SAAQX,EAAG,EAA5B,EAA+BO,MAA/B,CAAnB;AACAd,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAK,MAAAA,QAAQ,CAAC;AAAEc,QAAAA,IAAI,EAAExB,KAAK,CAACyB,UAAd;AAA0BC,QAAAA,OAAO,EAAEd;AAAnC,OAAD,CAAR;AACD,KATD,CASE,OAAOe,KAAP,EAAc;AACdC,MAAAA,KAAK,CAAE,GAAED,KAAK,CAACE,QAAN,CAAed,IAAf,CAAoBe,GAAI,IAA5B,CAAL;AACD;AACF,GAbD;;AAeA,sBACE,QAAC,YAAD,CAAc,QAAd;AACE,IAAA,KAAK,EAAE;AAAEnB,MAAAA,aAAF;AAAiBM,MAAAA,UAAjB;AAA6BZ,MAAAA,SAA7B;AAAwCD,MAAAA,MAAxC;AAAgDM,MAAAA,QAAhD;AAA0DD,MAAAA;AAA1D,KADT;AAAA,cAGGN;AAHH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CArDM;;GAAMD,e;UAEML,W;;;KAFNK,e","sourcesContent":["import { createContext, useReducer, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport postsApi from \"../helpers/postsApi\";\nimport postsReducer from \"./postsReducer\";\nimport types from \"./types\";\n\nexport const PostsContext = createContext({});\n\nexport const ContextProvider = ({ children }) => {\n  const [reload, setReload] = useState(true);\n  const navigate = useNavigate();\n\n  const initialState = {\n    posts: [],\n  };\n\n  // const init = () => {\n  //   return JSON.parse(localStorage.getItem(\"todos\")) || [];\n  // };\n\n  const [state, dispatch] = useReducer(postsReducer, initialState);\n\n  const getPostDetail = async (id) => {\n    console.log(\"el id\", id);\n    const { data } = await postsApi.get(`posts/${id}`);\n    const posts = data.posts;\n    return posts;\n    // localStorage.setItem(\"posts\", JSON.stringify(posts));\n    // dispatch({ type: types.refreshData, payload: posts });\n  };\n\n  // useEffect(() => {\n  //   if (reload) {\n  //     refreshPosts();\n  //     navigate(\"/\");\n  //     setReload(false);\n  //   }\n  // }, [reload]);\n\n  const deletePost = async (id, token) => {\n    try {\n      let config = {\n        headers: {\n          authorization: \"Bearer \" + token,\n        },\n      };\n      const resp = await postsApi.delete(`posts/${id}`, config);\n      setReload(true);\n      dispatch({ type: types.deleteData, payload: id });\n    } catch (error) {\n      alert(`${error.response.data.msg}!!`);\n    }\n  };\n\n  return (\n    <PostsContext.Provider\n      value={{ getPostDetail, deletePost, setReload, reload, dispatch, state }}\n    >\n      {children}\n    </PostsContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}