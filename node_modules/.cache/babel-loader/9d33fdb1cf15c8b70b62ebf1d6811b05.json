{"ast":null,"code":"var _jsxFileName = \"/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/comments/NewComment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { AuthContext } from \"../../context/authContext\";\nimport jwtDecode from \"jwt-decode\";\nimport postsApi from \"../../helpers/postsApi\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NewComment = () => {\n  _s();\n\n  var _userState$user;\n\n  const {\n    userState\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const {\n    _id: userID\n  } = jwtDecode((_userState$user = userState.user) === null || _userState$user === void 0 ? void 0 : _userState$user.token);\n  const params = useParams();\n  const [form, setForm] = useState();\n  const [archivo, guardarArchivo] = useState(\"\");\n\n  const leerArchivo = e => {\n    guardarArchivo(e.target.files[0]);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!form) {\n      alert(\"comment is required\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"comment\", form);\n    formData.append(\"image\", archivo);\n    formData.append(\"author\", userID);\n\n    try {\n      let config = {\n        headers: {\n          authorization: \"Bearer \" + userState.user.token,\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      };\n      const {\n        data\n      } = await postsApi.post(`posts/${params.id}/comments`, formData, config);\n      alert(data.msg);\n    } catch (error) {\n      alert(error.response.data.msg);\n    }\n\n    setForm(\" \");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"m-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          class: \"form-control\",\n          onChange: e => setForm(e.target.value) // type=\"text\"\n          ,\n          value: form\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-text\",\n          children: \"Write a comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          class: \"form-control mt-3 mb-4\",\n          type: \"file\",\n          name: \"imagen\",\n          onChange: leerArchivo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-text mb-3\",\n          children: \"Upload an image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"my-btn\",\n          type: \"submit\",\n          value: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"back\",\n      onClick: () => navigate(`/post/${params.id}`),\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"bi bi-backspace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), \" back\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NewComment, \"m0V3UxquBoG7rCh35dMYzYG7phc=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = NewComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewComment\");","map":{"version":3,"sources":["/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/comments/NewComment.js"],"names":["React","useState","useContext","AuthContext","jwtDecode","postsApi","useNavigate","useParams","NewComment","userState","navigate","_id","userID","user","token","params","form","setForm","archivo","guardarArchivo","leerArchivo","e","target","files","handleSubmit","preventDefault","alert","formData","FormData","append","config","headers","authorization","data","post","id","msg","error","response","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { AuthContext } from \"../../context/authContext\";\nimport jwtDecode from \"jwt-decode\";\nimport postsApi from \"../../helpers/postsApi\";\nimport { useNavigate, useParams } from \"react-router-dom\";\n\nexport const NewComment = () => {\n  const { userState } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const { _id: userID } = jwtDecode(userState.user?.token);\n  const params = useParams();\n\n  const [form, setForm] = useState();\n  const [archivo, guardarArchivo] = useState(\"\");\n\n  const leerArchivo = (e) => {\n    guardarArchivo(e.target.files[0]);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!form) {\n      alert(\"comment is required\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"comment\", form);\n    formData.append(\"image\", archivo);\n    formData.append(\"author\", userID);\n\n    try {\n      let config = {\n        headers: {\n          authorization: \"Bearer \" + userState.user.token,\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      };\n      const { data } = await postsApi.post(\n        `posts/${params.id}/comments`,\n        formData,\n        config\n      );\n      alert(data.msg);\n    } catch (error) {\n      alert(error.response.data.msg);\n    }\n    setForm(\" \");\n  };\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div class=\"m-5\">\n          <textarea\n            class=\"form-control\"\n            onChange={(e) => setForm(e.target.value)}\n            // type=\"text\"\n            value={form}\n          />\n          <div class=\"form-text\">Write a comment</div>\n\n          <input\n            class=\"form-control mt-3 mb-4\"\n            type=\"file\"\n            name=\"imagen\"\n            onChange={leerArchivo}\n          />\n          <div class=\"form-text mb-3\">Upload an image</div>\n          <input className=\"my-btn\" type=\"submit\" value=\"submit\" />\n        </div>\n      </form>\n      <button\n        className=\"back\"\n        onClick={() => navigate(`/post/${params.id}`)}\n      >\n        {\" \"}\n        <i class=\"bi bi-backspace\"></i> back{\" \"}\n      </button>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}