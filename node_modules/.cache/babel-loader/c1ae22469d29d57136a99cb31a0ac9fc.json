{"ast":null,"code":"var _jsxFileName = \"/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/blogs/ListOfBlogs.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext, useEffect } from \"react\";\nimport { PostsContext } from \"../../context/postsContext\";\nimport postsApi from \"../../helpers/postsApi\";\nimport { NewPost } from \"./NewPost\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Post } from \"./Post\";\nimport types from \"../../context/types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ListOfPost = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    reload,\n    setReload,\n    state,\n    dispatch\n  } = useContext(PostsContext);\n  const {\n    posts\n  } = state;\n  const [newPost, setNewPost] = useState(false);\n  const [postState, setPostState] = useState([]);\n\n  const refreshPosts = async () => {\n    const {\n      data\n    } = await postsApi.get(\"posts\");\n    const posts = data.posts;\n    dispatch({\n      type: types.refreshData,\n      payload: posts\n    });\n  };\n\n  useEffect(() => {\n    if (reload) {\n      refreshPosts();\n      navigate(\"/\");\n      setReload(false);\n    }\n  }, [reload]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3 mb-1\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center  justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"my-btn\",\n          onClick: () => setNewPost(true),\n          children: \"CREATE POST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), newPost ? /*#__PURE__*/_jsxDEV(NewPost, {\n      setNewPost: () => setNewPost(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : posts.map(x => /*#__PURE__*/_jsxDEV(Post, {\n      somePost: x\n    }, x._d, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 26\n    }, this))]\n  }, void 0, true);\n};\n\n_s(ListOfPost, \"/i+HXEozEnE0djK3dLR6a/mzzsA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ListOfPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListOfPost\");","map":{"version":3,"sources":["/Users/wilidga/Developer/MERN/FullStack/ITijuana-demo/final-project-front/src/components/blogs/ListOfBlogs.js"],"names":["useState","useContext","useEffect","PostsContext","postsApi","NewPost","useNavigate","Post","types","ListOfPost","navigate","reload","setReload","state","dispatch","posts","newPost","setNewPost","postState","setPostState","refreshPosts","data","get","type","refreshData","payload","map","x","_d"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,EAA+BC,SAA/B,QAAgD,OAAhD;AACA,SAASC,YAAT,QAA6B,4BAA7B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,SAASC,IAAT,QAAqB,QAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAC9B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM;AAAEK,IAAAA,MAAF;AAAUC,IAAAA,SAAV;AAAqBC,IAAAA,KAArB;AAA4BC,IAAAA;AAA5B,MAAyCb,UAAU,CAACE,YAAD,CAAzD;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAYF,KAAlB;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMoB,YAAY,GAAG,YAAY;AAC/B,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMjB,QAAQ,CAACkB,GAAT,CAAa,OAAb,CAAvB;AACA,UAAMP,KAAK,GAAGM,IAAI,CAACN,KAAnB;AACAD,IAAAA,QAAQ,CAAC;AAAES,MAAAA,IAAI,EAAEf,KAAK,CAACgB,WAAd;AAA2BC,MAAAA,OAAO,EAAEV;AAApC,KAAD,CAAR;AACD,GAJD;;AAMAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,MAAJ,EAAY;AACVS,MAAAA,YAAY;AACZV,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACAE,MAAAA,SAAS,CAAC,KAAD,CAAT;AACD;AACF,GANQ,EAMN,CAACD,MAAD,CANM,CAAT;AAOA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,mDAAf;AAAA,+BACE;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAE,MAAMM,UAAU,CAAC,IAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAQGD,OAAO,gBACN,QAAC,OAAD;AAAS,MAAA,UAAU,EAAE,MAAMC,UAAU,CAAC,KAAD;AAArC;AAAA;AAAA;AAAA;AAAA,YADM,GAGNF,KAAK,CAACW,GAAN,CAAWC,CAAD,iBAAO,QAAC,IAAD;AAAiB,MAAA,QAAQ,EAAEA;AAA3B,OAAWA,CAAC,CAACC,EAAb;AAAA;AAAA;AAAA;AAAA,YAAjB,CAXJ;AAAA,kBADF;AAgBD,CApCM;;GAAMnB,U;UACMH,W;;;KADNG,U","sourcesContent":["import { useState, useContext, useEffect } from \"react\";\nimport { PostsContext } from \"../../context/postsContext\";\nimport postsApi from \"../../helpers/postsApi\";\nimport { NewPost } from \"./NewPost\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { Post } from \"./Post\";\nimport types from \"../../context/types\";\n\nexport const ListOfPost = () => {\n  const navigate = useNavigate();\n  const { reload, setReload, state, dispatch } = useContext(PostsContext);\n  const { posts } = state;\n  const [newPost, setNewPost] = useState(false);\n  const [postState, setPostState] = useState([]);\n\n  const refreshPosts = async () => {\n    const { data } = await postsApi.get(\"posts\");\n    const posts = data.posts;\n    dispatch({ type: types.refreshData, payload: posts });\n  };\n\n  useEffect(() => {\n    if (reload) {\n      refreshPosts();\n      navigate(\"/\");\n      setReload(false);\n    }\n  }, [reload]);\n  return (\n    <>\n      <div className=\"mt-3 mb-1\">\n        <div className=\"d-flex align-items-center  justify-content-center\">\n          <button className=\"my-btn\" onClick={() => setNewPost(true)}>\n            CREATE POST\n          </button>\n        </div>\n      </div>\n      {newPost ? (\n        <NewPost setNewPost={() => setNewPost(false)} />\n      ) : (\n        posts.map((x) => <Post key={x._d} somePost={x} />)\n      )}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}